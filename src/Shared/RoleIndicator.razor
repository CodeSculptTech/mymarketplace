@inject IHttpContextAccessor _httpContext
@inject ILogger<RoleIndicator> _logger

@code {
    string role = "User";
    string color = "blue";

    protected override async Task OnInitializedAsync()
    {
        if (_httpContext is not null && _httpContext.HttpContext is not null)
        {
            var user = _httpContext.HttpContext.User;
            _logger.LogInformation($"User: {user.Identity.Name}");
            _logger.LogInformation($"User: {user.Identity.AuthenticationType}");
            _logger.LogInformation($"User is admin: {user.IsInRole("Admins")}");
            _logger.LogInformation($"User is users: {user.IsInRole("Users")}");
            role = user.IsInRole("Admins") ? "Admin" : "User";
            color = user.IsInRole("Admins") ? "red" : "blue";
            StateHasChanged();
        }
    }
}
<Tag Color="@color">@role</Tag>